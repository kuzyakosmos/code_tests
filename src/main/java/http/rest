REST(это архитектура!) - Representation state transfer (передача состояния представления)
сервер делится своим состоянием

Сервис называется RESTful если соответсвует принципам REST:

0. Client-Server Architecture
Разделение клиента и сервера

1. Stateleness (независимость от состояния)
Сервер не должен запоминать состояние пользователя между запросами - в каждом запросе передается
нужная информация (token авториции и тд)

2. Layered System (многоуровненвая архитектура)
Можно иметь любое количество слоев абстракции, клиенту все равно что происходит на сервере,
и является ли он вообще конечным. Делим сервер на компоненты (микросервисы) - проще дебажить.

3. Uniform interface (Единый унифицированный программный интерфейс API)
Понятная иерархия урлов

4. Cacheable (Кэшируемая архитекура)

Ответ сервера может быть кэширован на определенный период времени
и использоваться повторно без новых запросов к серверу
(часто для этого используется бд Redis)

5. Удобное представление данных?

В качестве представления данных объекта передаются данные
в форматах JSON и XML


